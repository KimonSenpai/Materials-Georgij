'''Для заданной последовательности неотрицательных натуральных чисел
 необходимо найти максимальное произведение двух её элементов,
 номера которых различаются не менее чем на 8. Значение каждого
 элемента последовательности не превышает 1000. Количество элементов 
 последовательности не превышает 10000.

Вам предлагаются два задания, связанные с этой задачей: задание А и 
задание Б. Вы можете решать оба задания А и Б или одно из них по 
своему выбору. Итоговая оценка выставляется как максимальная из оценок 
за задания А и Б. Если решение одного из заданий не представлено, то 
считается, что оценка за это задание составляет 0 баллов. Задание Б 
является усложненным вариантом задания А, оно содержит дополнительные 
требования к программе.

 

А. Напишите на любом языке программирования программу для решения 
поставленной задачи, в которой входные данные будут запоминаться в 
массиве, после чего будут проверены все возможные пары элементов. 
Перед программой укажите версию языка программирования. Обязательно 
укажите, что программа является решением задания А. Максимальная 
оценка за выполнение задания А  — 2 балла.

 

Б. Напишите программу для решения поставленной задачи, которая будет 
эффективна как по времени, так и по памяти (или хотя бы по одной из 
этих характеристик).

 

Программа считается эффективной по времени, если время работы 
программы пропорционально количеству элементов последовательности 
N, т. е. при увеличении N в k раз время работы программы должно 
увеличиваться не более чем в k раз. Программа считается эффективной 
по памяти, если размер памяти, использованной в программе для хранения 
данных, не зависит от числа N и не превышает 1 килобайта. Перед 
программой укажите версию языка программирования и кратко опишите 
использованный алгоритм.'''


f = open("27.txt")
n = int(f.readline())
max_val = 0
max_mul = 0
mas = [0]*8
for i in range(8):
    mas[i] = int(f.readline())

for i in range(8, n):
    val = int(f.readline())
    max_val = max(max_val, mas[i%8])
    max_mul = max(max_mul, val*max_val)
    mas[i%8] = val

print(max_mul)